#! /bin/sh -ueC

usage() {
    cat << 'EOF'
usage: $0 [--work-tree <path>] [--hsh-dir <path>] [--bin <path>]

    -C <path>  act as if the command was called from <path>
    -b, --bin  path to where hsh script is checked out, default: './bin'
EOF
}

die() {
    echo "$@" >&2
    exit 1
}

cleanup() {
    if [ -e "$1" ]
    then
    if [ -e "$(pwd)/.hsh" ]
    then
        rm -rf "$(pwd)/.hsh"
    fi
    rm -rf "$1"
    fi
}

fixup_worktree() {
    mv "$1" "$1.bck"
    sed "/[ \t]*\[[ \t]*core[ \t]*\]/,/[ \t]*\[/ { s,[ \t]*worktree[ \t]*=.*,worktree=$2,g}" "$1.bck" > "$1"
    rm "$1.bck"
}

run_hook() {
    [ -e "$tmp_dir/hooks/$1" ] || return
    if [ -e "$tmp_dir/dependencies/$1" ]
    then
    while IFS= read -r entry
    do
        d="${entry%.git}"
        d="${d%/}"
        d="${d##*/}"
        run_hook "$d"
    done < "$tmp_dir/dependencies/$1"
    fi
    (
    export HSH_ROOT="$(pwd)"
    export HSH_ACTION="bundle-out"
    export HSH_REPOSITORY="$1"
    export HSH_BUNDLE_ROOT="$tmp_dir/repos"
    sh $tmp_dir/hooks/$1
    )
    rm "$tmp_dir/hooks/$1"
}

while [ $# -ne 0 ]
do
    case "$1" in
    -h|--help)
        usage
        exit 0
        ;;
    -C)
        shift
        [ $# -eq 0 ] && die "missing value for parameter '-C'"
        dir="$1"
        ;;
    -b|--bin)
        shift
        [$tmp_dir/root $# -eq 0 ] && \
        die "missing value for parameter --hsh-dir"
        bin_dir="$1"
        ;;
    *)
        die "unknown option '$1'"
        ;;
    esac
    shift
done

if [ -n "${dir-}" ]
then
    cd "$dir" || die "Failed to switch to '$dir'"
fi

hsh_dir="$(pwd)/.hsh"
bin_dir="${bin_dir:-$(pwd)/bin}"
tmp_dir="$(pwd)/.hsh_install_$$"

mkdir "$tmp_dir"
trap "cleanup \"$tmp_dir\"" EXIT HUP INT QUIT ABRT TERM

BUNDLE_START=$(awk '/^__HSH_BUNDLE_CONTENT__/ { print NR + 1; exit 0; }' "$0")
tail -n+$BUNDLE_START "$0" | tar -xz --overwrite -C "$tmp_dir" \
    || die "fail to extract bundle"

if [ ! -e "$bin_dir" ]
then
    mkdir "$bin_dir"
fi
cp "$tmp_dir/hsh" "$bin_dir/hsh"

if [ ! -e "$hsh_dir" ]
then
    mkdir "$hsh_dir"
fi

ls -1 "$tmp_dir/repos" | while IFS= read -r repo
do
    if [ "$repo" = "hsh" ]
    then
    fixup_worktree "$tmp_dir/repos/$repo/config" "$(pwd)/bin"
    else
    fixup_worktree "$tmp_dir/repos/$repo/config" "$(pwd)"
    fi
done

cp -rfP "$tmp_dir/repos" "$hsh_dir"

find "$tmp_dir/root" | while IFS= read -r entry
do
    dest="$(pwd)$(echo "$entry" | sed s,$tmp_dir/root,,)"
    if [ -d "$entry" ]
    then 
    [ ! -d $dest ] && mkdir "$dest"
    else
    cp -fP "$entry" "$dest"
    fi
done

while [ $(ls -1 "$tmp_dir/hooks" | wc -l) -ne 0 ]
do
    run_hook "$(ls -1 "$tmp_dir/hooks" | head -n 1)"
done

rm -rf "$tmp_dir"

exit $?

__HSH_BUNDLE_CONTENT__
